<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--目标类的bean-->
    <bean id="targetID" class="top.zhaohaoren.aop.半自动.TargetImpl"/>
    <!--创建切面类-->
    <bean id="aspectID" class="top.zhaohaoren.aop.半自动.Aspect"/>
    <!--代理类的bean
        使用工厂bean aop自带的ProxyFactoryBean，生成特定的代理对象
        生成这个对象需要注入一些参数：（和jdk的代理很类似）
        interfaces: 接口们
        target: 目标类
        interceptorNames: 切面类名称string类型 用value注入

        生成代理类的底层机制：
        如果类有接口，就使用jdk动态代理
        如果没有接口，使用cglib
        如果申明了optimize，强制使用cglib
    -->
    <bean id="proxyTargetID" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="interfaces" value="top.zhaohaoren.aop.半自动.Target"/>
        <property name="target" ref="targetID"/>
        <property name="interceptorNames" value="aspectID"/>
        <property name="optimize" value="true"/> <!--强制使用cglib-->
    </bean>

    <!--aop全自动-->
    <bean id="aop_target" class="top.zhaohaoren.aop.全自动.Target"/>
    <bean id="aop_aspect" class="top.zhaohaoren.aop.全自动.Aspect"/>
    <!--
        proxy-target-class: 申明使用cglib代理
        配置aop框架：
        1. 添加最上面的xml的命名空间
        2. 导入依赖包，aspectj的依赖，必须要添加对应的版本号，否则可能会出错
        3. 配置aop
    -->
    <aop:config proxy-target-class="true">
        <!--切入点，切入点表达式来选择对哪些方法进行切入
            切入点表达式：expression
            execution(* top.zhaohaoren.aop.全自动.*.*(..))   返回值任意，包，任意类名，任意方法，任意参数
                    返回值 类.方法.参数     * 表示任意所有 ..表示参数任意
        -->
        <aop:pointcut id="myPointCut" expression="execution(* top.zhaohaoren.aop.全自动.*.*(..))"/>
        <!--增强方法,通知
            特殊的切面： 一个通知advice-ref 一个切入点pointcut-ref
        -->
        <aop:advisor advice-ref="aop_aspect" pointcut-ref="myPointCut"/>
    </aop:config>

</beans>